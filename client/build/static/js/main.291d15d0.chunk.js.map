{"version":3,"sources":["components/images/mail-ico.svg","components/images/lock-ico.svg","components/images/user-ico.svg","components/images/reg-bg.svg","components/images/reg-img.svg","components/images/login-bg.svg","components/images/login-img.svg","components/layout/Header.js","components/layout/Footer.js","components/layout/Layout.js","components/spinner.js","components/Analytics.js","pages/HomePage.js","pages/Register.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","loginUser","setLoginUser","useState","navigate","useNavigate","useEffect","user","JSON","parse","localStorage","getItem","React","createElement","Fragment","className","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","to","name","aria-current","class","onClick","logoutHandler","removeItem","message","success","Footer","Layout","_ref","children","Spinner","role","Analytics","allTransaction","categories","totalTransaction","length","totalIncomeTransactions","filter","transaction","totalExpenseTransactions","totalIncomePercent","totalExpensePercent","totalTurnover","reduce","acc","amount","totalIncomeTurnover","totalExpenseTurnover","totalIncomeTurnoverPercent","totalExpenseTurnoverPercent","Progress","strokeColor","percent","toFixed","map","category","index","key","RangePicker","DatePicker","HomePage","showModal","setShowModal","loading","setLoading","setAllTransaction","frequency","setFrequency","selectedDate","setSelectedate","setType","viewData","setViewData","editable","setEditable","columns","title","dataIndex","render","text","moment","format","record","_id","EditOutlined","DeleteOutlined","handleDelete","async","res","axios","post","userid","data","console","log","error","getAllTransactions","transacationId","Select","value","onChange","values","Option","UnorderedListOutlined","concat","AreaChartOutlined","Table","dataSource","Modal","open","onCancel","footer","Form","layout","onFinish","payload","userId","initialValues","Item","label","Input","Register","src","regForeground","alt","style","backgroundImage","regBackground","backgroundSize","backgroundPosition","prefix","userIcon","placeholder","mailIcon","Password","passwordIcon","Login","setItem","stringify","password","loginBackground","loginForeground","ProtectedRoutes","props","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.291d15d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mail-ico.11158be3.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-ico.deb1da2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-ico.38deea0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/reg-bg.de1feec2.svg\";","module.exports = __webpack_public_path__ + \"static/media/reg-img.68e0f972.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-bg.b7118626.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-img.3c8beb57.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\n\r\nconst Header = () => {\r\n    const [loginUser, setLoginUser] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (user) {\r\n        setLoginUser(user);\r\n      }\r\n    }, []);\r\n  \r\n    const logoutHandler = () => {\r\n      localStorage.removeItem(\"user\");\r\n      message.success(\"Logout Successfully\");\r\n      navigate(\"/login\");\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-body-tertiary\">\r\n                <div className=\"container-fluid\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                        <div className='nav-logo'></div>\r\n                        <div className='brand-name'><Link className=\"navbar-brand\" to=\"/home\"><p>Expense</p><br></br><p>Tracker</p></Link></div>\r\n                        <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        {\" \"}\r\n                        <p className=\"nav-link\">{loginUser && loginUser.name}</p>{\" \"}\r\n                      </li>\r\n                            <li className=\"nav-logout\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\">\r\n                                    <button type=\"button\" class=\"btn btn-light\" onClick={logoutHandler}><div className='logout-text'>Logout</div></button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className='bg-dark text-light p-4'>\r\n            <h6 className=\"text-center\">All rights reserved &copy; Shreyansh</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"content\">\r\n        {children}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default Layout\r\n","import React from 'react'\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React from \"react\";\nimport { Progress } from \"antd\";\n\nconst Analytics = ({ allTransaction }) => {\n  // category\n  const categories = [\n    \"salary\",\n    \"tip\",\n    \"project\",\n    \"food\",\n    \"movie\",\n    \"bills\",\n    \"medical\",\n    \"fee\",\n    \"tax\",\n  ];\n\n  // total transaction\n  const totalTransaction = allTransaction.length;\n  const totalIncomeTransactions = allTransaction.filter(\n    (transaction) => transaction.type === \"income\"\n  );\n  const totalExpenseTransactions = allTransaction.filter(\n    (transaction) => transaction.type === \"expense\"\n  );\n  const totalIncomePercent =\n    (totalIncomeTransactions.length / totalTransaction) * 100;\n  const totalExpensePercent =\n    (totalExpenseTransactions.length / totalTransaction) * 100;\n\n  // total turnover\n  const totalTurnover = allTransaction.reduce(\n    (acc, transaction) => acc + transaction.amount,\n    0\n  );\n  const totalIncomeTurnover = allTransaction\n    .filter((transaction) => transaction.type === \"income\")\n    .reduce((acc, transaction) => acc + transaction.amount, 0);\n\n  const totalExpenseTurnover = allTransaction\n    .filter((transaction) => transaction.type === \"expense\")\n    .reduce((acc, transaction) => acc + transaction.amount, 0);\n\n  const totalIncomeTurnoverPercent =\n    (totalIncomeTurnover / totalTurnover) * 100;\n  const totalExpenseTurnoverPercent =\n    (totalExpenseTurnover / totalTurnover) * 100;\n\n  return (\n    <>\n      <div className=\"row m-3\">\n        <div className=\"col-md-4\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Total Transactions : {totalTransaction}\n            </div>\n            <div className=\"card-body\">\n              <h5 className=\"text-success\">\n                Income : {totalIncomeTransactions.length}\n              </h5>\n              <h5 className=\"text-danger\">\n                Expense : {totalExpenseTransactions.length}\n              </h5>\n              <div>\n                <Progress\n                  type=\"circle\"\n                  strokeColor={\"green\"}\n                  className=\"mx-2\"\n                  percent={totalIncomePercent.toFixed(0)}\n                />\n                <Progress\n                  type=\"circle\"\n                  strokeColor={\"red\"}\n                  className=\"mx-2\"\n                  percent={totalExpensePercent.toFixed(0)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Total TurnOver : {totalTurnover}\n            </div>\n            <div className=\"card-body\">\n              <h5 className=\"text-success\">\n                Income : {totalIncomeTurnover}\n              </h5>\n              <h5 className=\"text-danger\">\n                Expense : {totalExpenseTurnover}\n              </h5>\n              <div>\n                <Progress\n                  type=\"circle\"\n                  strokeColor={\"green\"}\n                  className=\"mx-2\"\n                  percent={totalIncomeTurnoverPercent.toFixed(0)}\n                />\n                <Progress\n                  type=\"circle\"\n                  strokeColor={\"red\"}\n                  className=\"mx-2\"\n                  percent={totalExpenseTurnoverPercent.toFixed(0)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col-md-4\">\n          <h4>Categorywise Income</h4>\n          {categories.map((category, index) => {\n            const amount = allTransaction\n              .filter(\n                (transaction) =>\n                  transaction.type === \"income\" &&\n                  transaction.category === category\n              )\n              .reduce((acc, transaction) => acc + transaction.amount, 0);\n            return (\n              amount > 0 && (\n                <div key={index} className=\"card\">\n                  <div className=\"card-body\">\n                    <h5>{category}</h5>\n                    <Progress\n                      percent={((amount / totalIncomeTurnover) * 100).toFixed(\n                        0\n                      )}\n                    />\n                  </div>\n                </div>\n              )\n            );\n          })}\n        </div>\n        <div className=\"col-md-4\">\n          <h4>Categorywise Expense</h4>\n          {categories.map((category, index) => {\n            const amount = allTransaction\n              .filter(\n                (transaction) =>\n                  transaction.type === \"expense\" &&\n                  transaction.category === category\n              )\n              .reduce((acc, transaction) => acc + transaction.amount, 0);\n            return (\n              amount > 0 && (\n                <div key={index} className=\"card\">\n                  <div className=\"card-body\">\n                    <h5>{category}</h5>\n                    <Progress\n                      percent={((amount / totalExpenseTurnover) * 100).toFixed(\n                        0\n                      )}\n                    />\n                  </div>\n                </div>\n              )\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Analytics;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, message, Modal, Select, Table, DatePicker } from \"antd\";\r\nimport {\r\n  UnorderedListOutlined,\r\n  AreaChartOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Layout from \"./../components/layout/Layout\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"./../components/spinner\";\r\nimport moment from \"moment\";\r\nimport Analytics from \"../components/Analytics\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst HomePage = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [allTransaction, setAllTransaction] = useState([]);\r\n  const [frequency, setFrequency] = useState(\"7\");\r\n  const [selectedDate, setSelectedate] = useState([]);\r\n  const [type, setType] = useState(\"all\");\r\n  const [viewData, setViewData] = useState(\"table\");\r\n  const [editable, setEditable] = useState(null);\r\n\r\n  // Table columns definition\r\n  const columns = [\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      render: (text) => <span>{moment(text).format(\"YYYY-MM-DD\")}</span>,\r\n      key: \"date\",\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: \"Category\",\r\n      dataIndex: \"category\",\r\n      key: \"category\",\r\n    },\r\n    {\r\n      title: \"Refrence\",\r\n      dataIndex: \"refrence\",\r\n      key: \"refrence\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      render: (text, record) => (\r\n        <div key={record._id}>\r\n          <EditOutlined\r\n            onClick={() => {\r\n              setEditable(record);\r\n              setShowModal(true);\r\n            }}\r\n          />\r\n          <DeleteOutlined\r\n            className=\"mx-2\"\r\n            onClick={() => {\r\n              handleDelete(record);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n      key: \"actions\",\r\n    },\r\n  ];\r\n\r\n  // Get all transactions\r\n  useEffect(() => {\r\n    const getAllTransactions = async () => {\r\n      try {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        setLoading(true);\r\n        const res = await axios.post(\"/api/v1/Transactions/get-Transaction\", {\r\n          userid: user._id,\r\n          frequency,\r\n          selectedDate,\r\n          type,\r\n        });\r\n        setLoading(false);\r\n        setAllTransaction(res.data);\r\n        console.log(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        message.error(\"Fetch Issue With Transaction\");\r\n      }\r\n    };\r\n    getAllTransactions();\r\n  }, [frequency, selectedDate, type]);\r\n\r\n  // Delete handler\r\n  const handleDelete = async (record) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"/api/v1/Transactions/delete-Transaction\", {\r\n        transacationId: record._id,\r\n      });\r\n      setLoading(false);\r\n      message.success(\"Transaction Deleted!\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n      message.error(\"Unable to delete\");\r\n    }\r\n  };\r\n\r\n  // Form handling\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      setLoading(true);\r\n      if (editable) {\r\n        await axios.post(\"/api/v1/Transactions/edit-Transaction\", {\r\n          payload: {\r\n            ...values,\r\n            userId: user._id,\r\n          },\r\n          transacationId: editable._id,\r\n        });\r\n        setLoading(false);\r\n        message.success(\"Transaction Updated Successfully\");\r\n      } else {\r\n        await axios.post(\"/api/v1/Transactions/add-Transaction\", {\r\n          ...values,\r\n          userid: user._id,\r\n        });\r\n        setLoading(false);\r\n        message.success(\"Transaction Added Successfully\");\r\n      }\r\n      setShowModal(false);\r\n      setEditable(null);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      message.error(\"Failed to add Transaction\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <Spinner />}\r\n      <div className=\"filters\">\r\n        <div>\r\n          <h6>Select Frequency</h6>\r\n          <Select value={frequency} onChange={(values) => setFrequency(values)}>\r\n            <Select.Option value=\"7\">LAST 1 Week</Select.Option>\r\n            <Select.Option value=\"30\">LAST 1 Month</Select.Option>\r\n            <Select.Option value=\"365\">LAST 1 Year</Select.Option>\r\n            <Select.Option value=\"custom\">Custom</Select.Option>\r\n          </Select>\r\n          {frequency === \"custom\" && (\r\n            <RangePicker\r\n              value={selectedDate}\r\n              onChange={(values) => setSelectedate(values)}\r\n            />\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h6>Select Type</h6>\r\n          <Select value={type} onChange={(values) => setType(values)}>\r\n            <Select.Option value=\"all\">ALL</Select.Option>\r\n            <Select.Option value=\"income\">INCOME</Select.Option>\r\n            <Select.Option value=\"expense\">EXPENSE</Select.Option>\r\n          </Select>\r\n        </div>\r\n        <div className=\"switch-icons\">\r\n          <UnorderedListOutlined\r\n            className={`mx-2 ${\r\n              viewData === \"table\" ? \"active-icon\" : \"inactive-icon\"\r\n            }`}\r\n            onClick={() => setViewData(\"table\")}\r\n          />\r\n          <AreaChartOutlined\r\n            className={`mx-2 ${\r\n              viewData === \"analytics\" ? \"active-icon\" : \"inactive-icon\"\r\n            }`}\r\n            onClick={() => setViewData(\"analytics\")}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"drk-btn\" onClick={() => setShowModal(true)}>\r\n            Add New\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        {viewData === \"table\" ? (\r\n          <Table\r\n            columns={columns}\r\n            dataSource={allTransaction.map((transaction) => ({\r\n              ...transaction,\r\n              key: transaction._id,\r\n            }))}\r\n          />\r\n        ) : (\r\n          <Analytics allTransaction={allTransaction} />\r\n        )}\r\n      </div>\r\n      <Modal\r\n        title={editable ? \"Edit Transaction\" : \"Add Transaction\"}\r\n        open={showModal}\r\n        onCancel={() => setShowModal(false)}\r\n        footer={false}\r\n      >\r\n        <Form layout=\"vertical\" onFinish={handleSubmit} initialValues={editable}>\r\n          <Form.Item label=\"Amount\" name=\"amount\">\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Type\" name=\"type\">\r\n            <Select>\r\n              <Select.Option value=\"income\">Income</Select.Option>\r\n              <Select.Option value=\"expense\">Expense</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Category\" name=\"category\">\r\n            <Select>\r\n              <Select.Option value=\"salary\">Salary</Select.Option>\r\n              <Select.Option value=\"tip\">Tip</Select.Option>\r\n              <Select.Option value=\"project\">Project</Select.Option>\r\n              <Select.Option value=\"food\">Food</Select.Option>\r\n              <Select.Option value=\"movie\">Movie</Select.Option>\r\n              <Select.Option value=\"bills\">Bills</Select.Option>\r\n              <Select.Option value=\"medical\">Medical</Select.Option>\r\n              <Select.Option value=\"fee\">Fee</Select.Option>\r\n              <Select.Option value=\"tax\">Tax</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Date\" name=\"date\">\r\n            <Input type=\"date\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Refrence\" name=\"refrence\">\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Description\" name=\"description\">\r\n            <Input type=\"text\" />\r\n          </Form.Item>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button type=\"submit\" className=\"drk-btn btn-primary\">\r\n              SAVE\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Form, Input, message } from 'antd';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport userIcon from '../components/images/user-ico.svg';\r\nimport mailIcon from '../components/images/mail-ico.svg';\r\nimport passwordIcon from '../components/images/lock-ico.svg';\r\nimport regBackground from '../components/images/reg-bg.svg';\r\nimport regForeground from '../components/images/reg-img.svg';\r\nimport Spinner from '../components/spinner';\r\n\r\nfunction Register() {\r\n\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  //submitHandler\r\n  const submitHandler = async (values) => {\r\n    try {\r\n      setLoading(true)\r\n      await axios.post('/api/v1/users/register',values)\r\n      message.success(\"reg successful\")\r\n      setLoading(false)\r\n      navigate(\"/login\")\r\n    } catch (error) {\r\n      setLoading(false)\r\n      message.error('error occured daa');\r\n    }\r\n  }\r\n\r\n  //prevent for login user\r\n  useEffect(()=> {\r\n    if(localStorage.getItem('user')){\r\n      navigate('/')\r\n    }\r\n  }, [navigate]);\r\n  return (\r\n    <div className=\"login-container\">\r\n    {loading && <Spinner/>}\r\n      <div className=\"login-right\" >\r\n        <div className=\"right-content\">\r\n          {/* Foreground Image */}\r\n          <img src={regForeground} alt=\"foreground\" className=\"fg-image\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"login-left\" style={{ backgroundImage: `url(${regBackground})`, backgroundSize: 'cover', backgroundPosition: 'center' }}>\r\n        <div className=\"reg-form\">\r\n          <h1>Register</h1>\r\n          <p className=\"register-text\">Already have an account? <Link to=\"/login\">Login here</Link></p>\r\n          <Form onFinish={submitHandler}>\r\n            <Form.Item name=\"name\">\r\n              <Input prefix={<img src={userIcon} alt=\"user icon\" />} placeholder=\"Name\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\">\r\n              <Input prefix={<img src={mailIcon} alt=\"email icon\" />} placeholder=\"E-mail ID\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password prefix={<img src={passwordIcon} alt=\"password icon\" />} placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <button type=\"primary\" className=\"reg-button\">\r\n                Register\r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n          <div className=\"white-line\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form, Input, message} from 'antd';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport mailIcon from '../components/images/mail-ico.svg';\r\nimport passwordIcon from '../components/images/lock-ico.svg';\r\nimport loginBackground from '../components/images/login-bg.svg';\r\nimport loginForeground from '../components/images/login-img.svg';\r\nimport Spinner from '../components/spinner';\r\n\r\nfunction Login() {\r\n  const [loading,setLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n  const submitHandler = async(values) => {\r\n    try{\r\n      setLoading(true)\r\n      const {data} = await axios.post('/api/v1/users/login',values)\r\n      setLoading(false)\r\n      message.success('login success')\r\n      localStorage.setItem('user', JSON.stringify({...data.user,password:\"\"}));\r\n      navigate('/')\r\n    } catch(error){\r\n      setLoading(false)\r\n        message.error(\"something wrong\")\r\n    }\r\n  }\r\n\r\n  //prevent for login user\r\n  useEffect(()=> {\r\n    if(localStorage.getItem('user')){\r\n      navigate('/')\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"login-container\">\r\n    {loading && <Spinner/>}\r\n      <div className=\"login-left\">\r\n        <div className=\"login-form\">\r\n          <h1>LOGIN</h1>\r\n          <p className=\"register-text\">Don't have an account yet? <Link to=\"/register\">Register here</Link></p>\r\n          <Form onFinish={submitHandler}>\r\n            <Form.Item name=\"email\">\r\n              <Input prefix={<img src={mailIcon} alt=\"user icon\" />} placeholder=\"Email ID\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\">\r\n              <Input.Password prefix={<img src={passwordIcon} alt=\"password icon\" />} placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <button type=\"primary\" className=\"login-button\">\r\n                Login Now\r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n          <div className=\"purple-line\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"login-right\">\r\n        <div className=\"right-content\">\r\n          {/* Background Image */}\r\n           <img src={loginBackground} alt=\"background\" className=\"bg-image\" />\r\n          {/* Foreground Image */}\r\n          <img src={loginForeground} alt=\"foreground\" className=\"fg-image\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React  from 'react';\nimport {Routes,Route} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n      <Route path='/' element={<ProtectedRoutes><HomePage /> </ProtectedRoutes>}  />  \n      <Route path='/register' element={<Register />}  />\n      <Route path='/login' element={<Login />}  />\n      </Routes>\n    </>\n  );\n}\n\nexport function ProtectedRoutes(props){\n    if(localStorage.getItem(\"user\")){\n      return props.children\n    }else{\n      return <navigate to=\"/login\"/>;\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}